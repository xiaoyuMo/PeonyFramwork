apply plugin: 'idea'
apply plugin: 'java'

idea{
    module{
        inheritOutputDirs = false
        outputDir = compileJava.destinationDir
        testOutputDir = compileTestJava.destinationDir
    }
}

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

project.sourceCompatibility = 1.8

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
}

/**
 * 获取Git 分支名
 */
def getGitBranch() {
    return 'git symbolic-ref --short -q HEAD'.execute().text.trim()
}

/**
 * 获取Git 版本号
 */
def getGitSHA() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

def buildTime() {
    return new Date().format("yyyy-MM-dd hh:mm:ss", TimeZone.getTimeZone("CCT+08"))
}

jar {
    manifest {
        attributes 'Date': buildTime(),
                'Version': getGitBranch() + ' : ' + getGitSHA(),
                'Main-Class': 'com.peony.engine.framework.server.Server'
    }
}

processResources {
    exclude { "**/*.*" }
}

dependencies {
    compile 'junit:junit:4.12'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.1'
    compile 'org.slf4j:slf4j-log4j12:1.7.13'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.6.0'
    compile 'cglib:cglib:3.2.5'
    compile 'com.alibaba:fastjson:1.2.23'
    compile 'org.javassist:javassist:3.22.0-GA'
    compile 'net.sf.trove4j:trove4j:3.0.3'
    compile 'org.ehcache:ehcache:3.0.0.m4'
    compile 'com.google.guava:guava:12.0'
    compile 'com.opencsv:opencsv:3.9'
    compile 'commons-dbutils:commons-dbutils:1.6'
    compile 'commons-collections:commons-collections:3.2.2'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-dbcp:commons-dbcp:1.4'
    compile 'commons-beanutils:commons-beanutils:1.9.2'
    compile 'mysql:mysql-connector-java:5.1.37'
    compile 'org.apache.tomcat:tomcat-websocket-api:9.0.0.M1'
    compile 'org.eclipse.jetty:jetty-server:9.3.10.v20160621'
    compile 'com.googlecode.xmemcached:xmemcached:2.0.0'
    compile 'io.netty:netty-all:4.1.7.Final'
    compile 'com.google.protobuf:protobuf-java:2.5.0'
    compile 'org.eclipse.jetty:jetty-webapp:9.3.11.v20160721'
    compile 'org.eclipse.jetty:jetty-io:9.3.11.v20160721'
    compile 'org.eclipse.jetty:jetty-util:9.3.11.v20160721'
    compile 'org.eclipse.jetty:jetty-jsp:9.2.10.v20150310'
    compile 'com.maxmind.geoip2:geoip2:2.3.0'
    compile 'com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.4.2'
    compile 'org.apache.httpcomponents:httpcore-nio:4.4.9'
    compile 'org.apache.httpcomponents:httpclient-cache:4.5.5'
    compile 'commons-codec:commons-codec:1.11'
    compile 'commons-logging:commons-logging:1.2'
    compile 'com.jcraft:jsch:0.1.54'
    // https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit
    compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.1.3.201810200350-r'
    // https://mvnrepository.com/artifact/com.vlkan/quasar-maven-plugin
    compile group: 'com.vlkan', name: 'quasar-maven-plugin', version: '0.7.9'

    compile 'com.zaxxer:HikariCP:2.6.3'

//    compile group: 'com.esotericsoftware.kryo', name: 'kryo', version: '5.0.0-RC1' // 这个版本打包失败
    compile group: 'com.esotericsoftware.kryo', name: 'kryo', version: '2.24.0'


    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'

}

buildscript {
    repositories{
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }
    dependencies {
        classpath 'commons-io:commons-io:2.4'
    }
}

def outDir = buildDir.absolutePath + File.separator + 'target'

task init_dependencies(dependsOn: ['build']) {
    doLast {
        new File(outDir).deleteDir()
        copy {
            from configurations.compile
            into outDir + '/lib'
        }
    }
}

task build_server(dependsOn: ['init_dependencies']) {
    doLast {
        copy {
            from buildDir.absolutePath + '/libs'
            into outDir + '/lib'
        }
        copy {
            from projectDir.absolutePath + '/src/main/resources/'
            into outDir + '/config'
        }
        copy {
            from projectDir.absolutePath + '/www/'
            into outDir + '/www'
        }
        copy {
            from projectDir.absolutePath + '/script/'
            into outDir
        }
    }
    doLast{
        delete buildDir.absolutePath + '/classes/main'
    }
}


task build_test(dependsOn: ['build_server']) {
    doLast {
        copy {
            from projectDir.absolutePath + '/env/test'
            into outDir
        }
    }
}

task build_online(dependsOn: ['build_server']) {
    doLast {
        copy {
            from projectDir.absolutePath + '/env/online'
            into outDir
        }
    }
}



task build_param(dependsOn: ['build_server']) {
    delete outDir
    doLast {
        copy {
            from projectDir.absolutePath + '/env/'+env
            into outDir
        }
    }
}

task build_update_config() {
    delete outDir
    doLast {
        copy {
            from projectDir.absolutePath + '/src/main/resources/csv'
            into outDir + '/config/csv'
            String[] names=config.split(",")
            for(String name:names){
                include name.endsWith(".csv")?name:(name+".csv")
            }
        }
    }
}
this.project.afterEvaluate{
    delete buildDir.absolutePath + '/classes/main'
    //这里可以添加一些版本控制信息
}